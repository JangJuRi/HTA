클라이언트(웹브라우져)가 웹서버에 요청 보내기
	* 브라우져는 항상 URL 형태의 요청을 서버로 보낸다.
	http://localhost:80/home.jsp
	* URL의 구성	
		http      - 프로토콜명
 		localhost - 서버가 구동되고 있는 컴퓨터 이름
 		80        - 서버프로그램이 사용하고있는 포트번호
 		/home.jsp - 클라이언트가 실행을 요청한 웹 애플리케이션 이름
	
	* 브라우져의 요청내용
		* 내컴퓨터(localhost)의 80번 포트를 사용하는 서버 프로그램에게 요청을 보낸다.
		* /home.jsp의 실행을 요청한다.

서버(Tomcat)이 클라이언트의 요청을 처리하기
	* 요청 URL을 분석한다.
		프로토콜 - http
		실행할 jsp파일의 경로 - /         => tomcat 9.0/webapps/ROOT
		실행할 jsp파일의 이름 - home.jsp

	* home.jsp를 실행한다.
		1. home.jsp를 home_jsp.java로 변환한다.
		2. home_jsp.java를 home_jsp.class로 컴파일한다.
		3. home_jsp.class로 객체를 생성한다.
		4. 생성된 객체의 _jspService()메소드를 실행한다.
		5. _jspService() 메소드는 동적인 웹 컨텐츠를 생성해서 브라우저로 출력한다.


네트워크
	- 여러 대의 컴퓨터가 통신회선으로 연결되어있는 것
	- 구성
		- Server : 서비스를 제공하는 컴퓨터 혹은 프로그램
		- Client : 서비스를 요청하고 제공받는 컴퓨터 혹은 프로그램
	
	- 네트워크의 주요 용어
		- host
			* 네트워크에 연결되어있는 식별가능한 컴퓨터
			* ip주소로 식별된다.

		- port
			* 실행중인 서버프로그램의 논리적인 연결지점
			* 모든 서버프로그램은 특정 포트번호를 가지고 실행된다.
			* 포트번호를 통해서 서비스를 제공하는 서버프로그램을 식별할 수 있다.
			* 포트번호의 범위는 0 ~ 65535 번까지다.
				0     ~ 1023  : 국제인터넷주소관리기구에서 특정 서버프로그램용으로 예약되어있음
				1024  ~ 49151 : 특정 벤더(소프트웨어 제조회사)사가 등록해서 사용할 수 있다. 
				49151 ~ 65535 : 개인적인 목적으로 사용할 수 있다.

			* 대표적인 서버프로그램의 포트번호
				웹서버 : 80
				FTP서버 : 21
				Telnet서버 : 23
				ssh서버 : 22
				https서버 : 443

			* 서버 접속 시 주소표기법
				프로토콜 : //호스트:포트번호
				웹 : http://localhost:80
				ftp : ftp://192.168.10.65:21
				
		- protocol
			* 클라이언트와 서버사이의 미리 약속된 통신규약이다.
			* 통신규약은 클라이언트와 서버가 교환하는 데이터의 형식을 규정하고있다.
			* ip, tcp, http, ftp, telnet, smtp, ssh, ...


OSI 7계층
	- 네트워크에서 통신이 이루어지는 과정을 7단계로 구분지어놓은 것
	- 7계층을 분리한 이유
		* 통신이 일어나는 과정을 단계별 분업화한다.
		* 통신 중 장애가 발생하면 해당 계층의 장비 및 소프트웨어만 수정하면 된다.

	- 7계층
		- Layer1 : 물리 계층(Physical layer)
			* 물리적인 장치의 전기적, 전자적 연결에 대한 표준을 정의
			* 주요 장비 : 허브

		- Layer2 : 데이터링크 계층(Data link layer)
			* 물리계층을 통해 송수신되는 정보의 오류와 흐름관리에 대한 표준을 정의
			* 네트워크 카드의 MAC(Media Access Control) 주소를 통해 목적지를 식별한다.
			* 주요 프로토콜 : X.25, Ethernet, TokenRing
			* 주요 장비 : 브릿지

		- Layer3 : 네트워크 계층(Network layer)
			* 종단간 전송을 위한 경로 설정을 담당한다.
			* 상대편 호스트에 도달하기 위한 최적의 경로를 라우팅 알고리즘을 통해 선택하고 제안한다.
			* 종단간의 전송을 위한 주소로 IP주소를 사용한다.
			* 주요 프로토콜 : IP
			* 주요 장비 : 라우터

		- Layer4 : 전송 계층(Transport layer)
			* 종단간 신뢰성있는 데이터 전송을 담당한다.
			* 상대편 호스트의 구체적인 목적지까지 데이터가 도달할 수 있도록한다.
			* 구체적인 목적지를 특정하기 위해서 port번호를 이용한다.
			* 신뢰성있는 데이터 전송을 위해 분할, 재조합, 연결제어, 흐름제어, 오류제어를 수행한다.
			* 주요 프로토콜 : TCP, UDP
			* 주요 장비 : L4 스위치

		- Layer5 : 세션 계층(Session layer)
			* 응용프로그램간의 논리적인 연결(세션)의 생성 및 제어를 담당한다.
			* 세션의 설정, 유지, 종료, 전송 중단 시 복구의 기능 등을 담당한다.
			* 주요 프로토콜 : 없음
			* 주요 장비 : 없음

		- Layer6 : 표현 계층(Presentation layer)
			* 데이터의 인코딩/디코딩, 암호화/복호화 등의 역할을 수행한다.
			* 코드 간의 번역을 담당하여 사용자 시스템에서 데이터의 형식상 차이를 다루는 부담을 응용계층으로부터 덜어준다.
			* 해당 데이터가 Text인지, JPG인지, PNG인지, PDF인지 등을 구분한다.
			* 주요 프로토콜 : 없음
			* 주요 장비 : 없음

		- Layer7 : 응용 계층(Application layer)
			* 데이터의 최종 목적지다.
			* 해당 데이터는 layer7의 프로토콜에 의해 모두 처리된다.
			* 우리가 사용하는 브라우져, 메일프로그램 등을 사용해서 해당 프로토콜을 보다 쉽게 사용할 수 있게 한다.
			* 주요 프로토콜 : http, telnet, ftp, smtp
			* 주요 장비 - 없음


IP(Internet Protocol)
	- ip주소체계를 규정하는 프로토콜
	- 종류
		- IPv4
			* 32비트로 구성된다.
			* 총 2^32개 만큼의 주소를 가진다.
			* 클래스
				클래스 A 주소 : 1.xxx.xxx.xxx ~ 126.xxx.xxx.xxx		256*256*256개의 host
				클래스 B 주소 : 128.???.xxx.xxx ~ 191.???.xxx.xxx	256*256개의 host
				클래스 C 주소 : 192.???.???.xxx ~ 223.???.???.xxx	256개의 host
				* 클래스는 연결가능한 host의 개수에 따라서 구분한다.
			* 구분
				공인 ip주소 : 다른 컴퓨터와 통신할 때 사용하는 ip주소
				사설 ip주소 : 가상 ip, 사설망(내부망)에서 사용할 수 있는 ip주소
					클래스 A 주소 : 10.0.0.0 ~ 10.255.255.255
					클래스 B 주소 : 172.16.0.0 ~ 172.31.255.255
					클래스 C 주소 : 192.168.0.0 ~ 192.168.255.255
				특수 목적 ip주소
					127.0.0.1 : 루프백(loopback)ip, host 자신을 나타내는 ip주소

			* 서브넷마스크
				ip대역을 더 적은 단위로 나눌 수 있다.
				ip주소와 서브넷마스크주소를 논리곱연산을 수행해서 같은 주소가 나오면 내부망, 다른 주소가 나오면 외부망으로 판단한다.
				
		- IPv6
			* 128비트로 구성된다.
			* 총 2^128개 만큼의 주소를 가진다.
			* ip주소 고갈문제, 인터넷의 확장성, 데이터의 보안 강화를 위해 정의되었다.
			* 주소표기법
				16진수로 표기한다.
				2001:0d5f:451d:0010:38da:6b43:191c:1d1d

TCP(Transmission Control Protocol)
	- host간의 신뢰성있는 데이터 전송을 위한 규약이다.
	- 특징
		* 연결지향
		* 신뢰성있는 데이터 전송을 위해 분할, 재조합, 연결제어, 흐름제어, 오류제어를 수행한다.
		

UDP(User Datagram Protocol)
	- TCP의 모든 신뢰성 기능이 없는 프로토콜이다.
	- UDP를 사용해서 데이터를 보내면 손실되는 데이터가 발생할 수 있다.
	- 실시간 스트리밍, 온라인 게임에서 주로 사용된다.


DNS(Domain Name Server)
	- 웹사이트의 도메인 이름과 ip주소를 서로 변환하는 역할을 수행하는 서버다.
	- 도메인네임에 대한 ip주소 정보를 제공한다.
	

TCP/IP 프로토콜
	- 인터넷 통신의 기반이 되는 프로토콜이다.
	- Layer4(전송계층)의 TCP와 Layer3(네트워크계층)의 IP 프로토콜을 말한다.
	- 많은 인터넷 서비스의 주요 데이터들이 TCP/IP 프로토콜을 이용해서 데이터를 교환하고있다.
	